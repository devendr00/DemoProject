{"ast":null,"code":"import axios from \"axios\";\nexport const apiinterceptor = axios.create({\n  baseURL: \"https://task-nhar.onrender.com\"\n});\n\n// Add a request interceptor\napiinterceptor.interceptors.request.use(config => {\n  const token = JSON.parse(localStorage.getItem(\"userData\"));\n  console.log(\"iiiiii@@@@\", token);\n  if (token) {\n    config.headers[\"Authorization\"] = \"Bearer \" + token.accessToken;\n  }\n  // config.headers['Content-Type'] = 'application/json';\n  return config;\n}, error => {\n  Promise.reject(error);\n});\napiinterceptor.interceptors.response.use(response => {\n  return response;\n}, function (error) {\n  const originalRequest = error.config;\n  if (error.response.status === 401 && originalRequest.url === \"http://127.0.0.1:3000/v1/auth/token\") {\n    router.push(\"/login\");\n    return Promise.reject(error);\n  }\n  if (error.response.status === 401 && !originalRequest._retry) {\n    originalRequest._retry = true;\n    const refreshToken = localStorageService.getRefreshToken();\n    return axios.post(\"/auth/token\", {\n      refresh_token: refreshToken\n    }).then(res => {\n      if (res.status === 201) {\n        localStorageService.setToken(res.data);\n        axios.defaults.headers.common[\"Authorization\"] = \"Bearer \" + localStorageService.getAccessToken();\n        return axios(originalRequest);\n      }\n    });\n  }\n  return Promise.reject(error);\n});","map":{"version":3,"names":["axios","apiinterceptor","create","baseURL","interceptors","request","use","config","token","JSON","parse","localStorage","getItem","console","log","headers","accessToken","error","Promise","reject","response","originalRequest","status","url","router","push","_retry","refreshToken","localStorageService","getRefreshToken","post","refresh_token","then","res","setToken","data","defaults","common","getAccessToken"],"sources":["/home/lenovo/Documents/task1/tsk1/src/Interceptors.js"],"sourcesContent":["import axios from \"axios\";\n\nexport const apiinterceptor = axios.create({\n  baseURL: \"https://task-nhar.onrender.com\",\n});\n\n// Add a request interceptor\napiinterceptor.interceptors.request.use(\n  (config) => {\n    const token = JSON.parse(localStorage.getItem(\"userData\"));\n    console.log(\"iiiiii@@@@\", token);\n    if (token) {\n      config.headers[\"Authorization\"] = \"Bearer \" + token.accessToken;\n    }\n    // config.headers['Content-Type'] = 'application/json';\n    return config;\n  },\n  (error) => {\n    Promise.reject(error);\n  }\n);\n\napiinterceptor.interceptors.response.use(\n  (response) => {\n    return response;\n  },\n  function (error) {\n    const originalRequest = error.config;\n\n    if (\n      error.response.status === 401 &&\n      originalRequest.url === \"http://127.0.0.1:3000/v1/auth/token\"\n    ) {\n      router.push(\"/login\");\n      return Promise.reject(error);\n    }\n\n    if (error.response.status === 401 && !originalRequest._retry) {\n      originalRequest._retry = true;\n      const refreshToken = localStorageService.getRefreshToken();\n      return axios\n        .post(\"/auth/token\", {\n          refresh_token: refreshToken,\n        })\n        .then((res) => {\n          if (res.status === 201) {\n            localStorageService.setToken(res.data);\n            axios.defaults.headers.common[\"Authorization\"] =\n              \"Bearer \" + localStorageService.getAccessToken();\n            return axios(originalRequest);\n          }\n        });\n    }\n    return Promise.reject(error);\n  }\n);\n"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AAEzB,OAAO,MAAMC,cAAc,GAAGD,KAAK,CAACE,MAAM,CAAC;EACzCC,OAAO,EAAE;AACX,CAAC,CAAC;;AAEF;AACAF,cAAc,CAACG,YAAY,CAACC,OAAO,CAACC,GAAG,CACpCC,MAAM,IAAK;EACV,MAAMC,KAAK,GAAGC,IAAI,CAACC,KAAK,CAACC,YAAY,CAACC,OAAO,CAAC,UAAU,CAAC,CAAC;EAC1DC,OAAO,CAACC,GAAG,CAAC,YAAY,EAAEN,KAAK,CAAC;EAChC,IAAIA,KAAK,EAAE;IACTD,MAAM,CAACQ,OAAO,CAAC,eAAe,CAAC,GAAG,SAAS,GAAGP,KAAK,CAACQ,WAAW;EACjE;EACA;EACA,OAAOT,MAAM;AACf,CAAC,EACAU,KAAK,IAAK;EACTC,OAAO,CAACC,MAAM,CAACF,KAAK,CAAC;AACvB,CACF,CAAC;AAEDhB,cAAc,CAACG,YAAY,CAACgB,QAAQ,CAACd,GAAG,CACrCc,QAAQ,IAAK;EACZ,OAAOA,QAAQ;AACjB,CAAC,EACD,UAAUH,KAAK,EAAE;EACf,MAAMI,eAAe,GAAGJ,KAAK,CAACV,MAAM;EAEpC,IACEU,KAAK,CAACG,QAAQ,CAACE,MAAM,KAAK,GAAG,IAC7BD,eAAe,CAACE,GAAG,KAAK,qCAAqC,EAC7D;IACAC,MAAM,CAACC,IAAI,CAAC,QAAQ,CAAC;IACrB,OAAOP,OAAO,CAACC,MAAM,CAACF,KAAK,CAAC;EAC9B;EAEA,IAAIA,KAAK,CAACG,QAAQ,CAACE,MAAM,KAAK,GAAG,IAAI,CAACD,eAAe,CAACK,MAAM,EAAE;IAC5DL,eAAe,CAACK,MAAM,GAAG,IAAI;IAC7B,MAAMC,YAAY,GAAGC,mBAAmB,CAACC,eAAe,CAAC,CAAC;IAC1D,OAAO7B,KAAK,CACT8B,IAAI,CAAC,aAAa,EAAE;MACnBC,aAAa,EAAEJ;IACjB,CAAC,CAAC,CACDK,IAAI,CAAEC,GAAG,IAAK;MACb,IAAIA,GAAG,CAACX,MAAM,KAAK,GAAG,EAAE;QACtBM,mBAAmB,CAACM,QAAQ,CAACD,GAAG,CAACE,IAAI,CAAC;QACtCnC,KAAK,CAACoC,QAAQ,CAACrB,OAAO,CAACsB,MAAM,CAAC,eAAe,CAAC,GAC5C,SAAS,GAAGT,mBAAmB,CAACU,cAAc,CAAC,CAAC;QAClD,OAAOtC,KAAK,CAACqB,eAAe,CAAC;MAC/B;IACF,CAAC,CAAC;EACN;EACA,OAAOH,OAAO,CAACC,MAAM,CAACF,KAAK,CAAC;AAC9B,CACF,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}